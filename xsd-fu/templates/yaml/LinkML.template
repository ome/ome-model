{% python
  def getConcreteClasses(abstractClass):
    returnList = []
    if model.opts.lang.hasSubstitutionGroup(abstractClass):
      for o in sorted(model.objects.values(), key=lambda x: x.name):
          if o.parentName == abstractClass:
            returnList.append(o.name)
    return returnList
%}\
# #%L
# OME-XML Java library for working with OME-XML metadata structures.
# %%
# Copyright (C) 2023 Open Microscopy Environment:
#   - Massachusetts Institute of Technology
#   - National Institutes of Health
#   - University of Dundee
#   - Board of Regents of the University of Wisconsin-Madison
#   - Glencoe Software, Inc.
#   - German Bio-Imaging, e.V.
# %%
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# The views and conclusions contained in the software and documentation are
# those of the authors and should not be interpreted as representing official
# policies, either expressed or implied, of any organization.
# #L%

#-----------------------------------------------------------------------------
#
# THIS IS AUTOMATICALLY GENERATED CODE.  DO NOT MODIFY.
#
#-----------------------------------------------------------------------------

id: https://www.openmicroscopy.org/linkml/${klass.name}
name: ${klass.name}

description: |-
    Generated by xsd-fu

license: https://creativecommons.org/licenses/by/4.0/

default_curi_maps:
  - semweb_context

imports:
  - linkml:types

prefixes:
  ${klass.name}: https://www.openmicroscopy.org/linkml/${klass.name}
  linkml: https://w3id.org/linkml/
  schema: http://schema.org/
  rdfs: http://www.w3.org/2000/01/rdf-schema#
  prov: http://www.w3.org/ns/prov#

default_prefix: ${klass.name}
default_range: string

classes:

    # Base: ${klass.base} -- Name: ${klass.name} -- Type: ${klass.type} -- modelBaseType: ${klass.modelBaseType} -- langBaseType: ${klass.langBaseType}

    ${klass.name}:
        is_a: ${klass.parentName}
{% if klass.isAbstract %}\
        abstract: true
{% end %}\

        attributes:
{% for prop in klass.instanceVariables %}\

            ${prop[1]}:
                range: ${prop[0]}

{% if not prop[4] %}\

{% if prop[3] is not None %}\
            # ${prop[3]}
{% end %}\
{% if prop[0] is not None %}\
{% if prop[2] is not None %}\
            # FIXME for lists ${prop[0]} ${prop[1]} = new ${prop[2]}();
{% end %}\
{% if prop[2] is None %}\
            # ${prop[0]} ${prop[1]};
{% end %}\
{% end %}\
{% end %}\
{% end %}\


