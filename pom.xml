<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
    http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.openmicroscopy</groupId>
  <artifactId>ome-model</artifactId>
  <version>6.5.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>OME Model</name>
  <description>Contains the OME imaging metadata model specification, code generator and implementation</description>
  <url>https://www.openmicroscopy.org/ome-file-formats/</url>
  <inceptionYear>2005</inceptionYear>
  <organization>
    <name>Open Microscopy Environment</name>
    <url>https://www.openmicroscopy.org/</url>
  </organization>
  <licenses>
    <license>
      <name>Simplified BSD License</name>
      <url>https://opensource.org/licenses/BSD-2-Clause</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>The OME Team</name>
      <url>https://www.openmicroscopy.org/teams/</url>
    </developer>
  </developers>
  <contributors>
    <contributor><name>Chris Allan</name></contributor>
    <contributor><name>Sébastien Besson</name></contributor>
    <contributor><name>Jean-Marie Burel</name></contributor>
    <contributor><name>Colin Blackburn</name></contributor>
    <contributor><name>Mark Carroll</name></contributor>
    <contributor><name>Helen Flynn</name></contributor>
    <contributor><name>David Gault</name></contributor>
    <contributor><name>Alexander Görtz</name></contributor>
    <contributor><name>Mark Hiner</name></contributor>
    <contributor><name>Simone Leo</name></contributor>
    <contributor><name>Roger Leigh</name></contributor>
    <contributor><name>Melissa Linkert</name></contributor>
    <contributor><name>Josh Moore</name></contributor>
    <contributor><name>Andrew Patterson</name></contributor>
    <contributor><name>Curtis Rueden</name></contributor>
    <contributor><name>Paul van Schayck</name></contributor>
    <contributor><name>Christoph Sommer</name></contributor>
    <contributor><name>Bjoern Thiel</name></contributor>
  </contributors>

  <prerequisites>
    <maven>3.0.5</maven>
  </prerequisites>

  <modules>
    <module>specification</module>
    <module>ome-xml</module>
  </modules>

  <scm>
    <connection>scm:git:https://github.com/ome/ome-model</connection>
    <developerConnection>scm:git:git@github.com:ome/ome-model</developerConnection>
    <tag>HEAD</tag>
    <url>https://github.com/ome/ome-model</url>
  </scm>
  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/ome/ome-model/issues</url>
  </issueManagement>
  <ciManagement>
    <system>GitHub actions</system>
    <url>https://github.com/ome/ome-model/actions</url>
  </ciManagement>

  <properties>
    <!-- If two artifacts on the classpath use two different versions of the
         same dependency, behavior is inconsistent at best, and often broken.
         The following properties facilitate consistency of dependency
         versions between various projects in the SciJava software stack.
         When possible, we advise using the relevant groupId and version
         properties for your dependencies rather than hardcoding them. -->

    <logback.version>1.3.15</logback.version>
    <slf4j.version>2.0.9</slf4j.version>
    <ome_common.version>6.0.25</ome_common.version>
    <ome-common.version>${ome_common.version}</ome-common.version>

    <ome.model.schemaver>2016-06</ome.model.schemaver>
    <ome.model.schemapath>specification/src/main/resources/released-schema/${ome.model.schemaver}</ome.model.schemapath>
    <ome.model.omeschema>${ome.model.schemapath}/ome.xsd</ome.model.omeschema>

    <!-- NB: Avoid platform encoding warning when copying resources. -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- NB: Specify formatting of the maven.build.timestamp property. -->
    <maven.build.timestamp.format>d MMMMM yyyy</maven.build.timestamp.format>

    <!-- NB: Override argLine property for extra maven-surefire-plugin args. -->
    <argLine/>
  </properties>

  <build>
    <!-- It is nice for "mvn" with no arguments to do something reasonable. -->
    <defaultGoal>install</defaultGoal>

    <plugins>
      <!-- Create -sources.jar when building. -->
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>

      <!-- Add Implementation-Build entry to JAR manifest. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
      </plugin>

      <!-- Enable 'license:' goals. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <plugin>
	  <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.14.0</version>
          <!-- Require the Java 8 platform. -->
          <configuration>
            <source>8</source>
            <target>8</target>
            <release>8</release>
          </configuration>
        </plugin>

      <!-- Enable 'license:' goals. -->
        <!-- License Maven plugin -
             http://mojo.codehaus.org/license-maven-plugin/
             This plugin manages project licenses and source file headers. -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>1.16</version>
          <configuration>
            <licenseName>bsd_2</licenseName>
            <organizationName>Open Microscopy Environment:
    - Board of Regents of the University of Wisconsin-Madison
    - Glencoe Software, Inc.
    - University of Dundee</organizationName>
            <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
            <canUpdateDescription>true</canUpdateDescription>
            <!-- NB: Avoid stomping on variant copyright holders. -->
            <canUpdateCopyright>false</canUpdateCopyright>
            <roots>
              <root>src</root>
            </roots>
            <extraExtensions>
              <bsh>java</bsh>
              <config>properties</config>
              <ijm>java</ijm>
            </extraExtensions>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>

        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>

        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.1.1</version>
        </plugin>

        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>

        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>

        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.1.0</version>
          <!-- Always add classpath to JAR manifests. -->
          <configuration>
            <skipIfEmpty>true</skipIfEmpty>
            <archive>
              <manifest>
                <addClasspath>true</addClasspath>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              </manifest>
              <manifestEntries>
                <!-- Add SCM revision from buildnumber plugin, if available. -->
                <Implementation-Build>${buildNumber}</Implementation-Build>
                <!-- Add a formatted timestamp for the build. -->
                <Implementation-Date>${maven.build.timestamp}</Implementation-Date>
              </manifestEntries>
            </archive>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>test-jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <!-- NB: The same version declaration and configuration block also
               appears in the <reporting> section, and must be kept in sync. -->
          <version>3.0.1</version>
          <configuration>
            <failOnError>false</failOnError>
            <links>
              <link>http://docs.oracle.com/javase/7/docs/api/</link>
            </links>
          </configuration>
          <executions>
            <execution>
              <id>attach-javadocs</id>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <artifactId>maven-plugin-plugin</artifactId>
          <version>3.5.2</version>
        </plugin>

        <plugin>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.5.3</version>
          <dependencies>
            <dependency>
              <groupId>org.apache.maven.scm</groupId>
              <artifactId>maven-scm-provider-gitexe</artifactId>
              <version>1.9</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>

        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>

        <!-- Create -sources.jar when building. -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.0.1</version>
          <!-- Build source artifact in addition to main artifact. -->
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- Build Number Maven plugin -
             http://mojo.codehaus.org/buildnumber-maven-plugin/
             This plugin embeds a build number in the JAR manifest. -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>buildnumber-maven-plugin</artifactId>
          <version>1.4</version>
          <!-- Record SCM revision in manifest. -->
          <executions>
            <execution>
              <phase>validate</phase>
              <goals>
                <goal>create</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
            <revisionOnScmFailure>UNKNOWN</revisionOnScmFailure>
          </configuration>
        </plugin>

        <!-- Exec Maven plugin -
        http://www.mojohaus.org/exec-maven-plugin/
        This plugin launches a Java class using Maven. -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>1.6.0</version>
        </plugin>

        <!-- Versions Maven plugin -
             http://mojo.codehaus.org/versions-maven-plugin/
             Check for new plugin versions using
             "mvn versions:display-plugin-updates" -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>2.5</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>3.2.7</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.sonatype.central</groupId>
            <artifactId>central-publishing-maven-plugin</artifactId>
            <version>0.8.0</version>
            <extensions>true</extensions>
            <configuration>
              <publishingServerId>central</publishingServerId>
              <tokenAuth>true</tokenAuth>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>jdk8-only</id>
      <activation>
        <jdk>(,11)</jdk>
      </activation>
      <properties>
        <testng.version>7.5</testng.version>
      </properties>
    </profile>
    <profile>
      <id>jdk11+</id>
      <activation>
        <jdk>[11,)</jdk>
      </activation>
      <properties>
        <testng.version>7.9.0</testng.version>
      </properties>
    </profile>
  </profiles>
</project>
